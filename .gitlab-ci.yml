cache:
  paths:
    - ./.m2/repository
  # keep cache across branch
  key: "$CI_PROJECT_PATH"

variables:
  MAVEN_OPTS: "-Djava.awt.headless=true -Dmaven.repo.local=.m2/repository"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -Dmaven.repo.local=./.m2/repository"
  ACCESS_KEY: "$AWS_ACCESS_KEY_ID"
  SECRET_KEY: "$AWS_SECRET_ACCESS_KEY"
  REGION: "AWS_DEFAULT_REGION"
  S3_BUCKET: "$AWS_S3_BUCKET"
  JAR_NAME: "city-api-0.0.1-SNAPSHOT.jar"
  APPLICATION_NAME: "APPLICATION_NAME"
  ENVIRONMENT_NAME: "city-api-prod"
  VERSION_LABEL: "0.0.1"

stages:
  - prebuild
  - build
  - test
  - copy-to-s3
  - deploy

prebuild-job:
  stage: prebuild
  script:
    - echo "Logging into AWS..."
    - echo "Setting AWS Region..."
    - aws configure set region $REGION
    - echo "Setting AWS Access Key Id..."
    - aws configure set aws_acccess_key_id $ACCESS_KEY
    - echo "Setting AWS Setting Access Key..."
    - aws configure set aws_secret_access_key $SECRET_KEY

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - "mvn clean compile $MAVEN_CLI_OPTS"
    - echo "Compile complete."
  artifacts:
    paths:
      - target/

unittest-job:
  stage: test
  dependencies:
    - build-job
  script:
    - echo "Running unit tests of the City API Application..."
    - "mvn verify $MAVEN_CLI_OPTS"
    - echo "Completed Unit Tests of the City API Application."
  artifacts:
    paths:
      - target/

integrationtest-job:
  stage: test
  dependencies:
    - unittest-job
  script:
    - echo "Running Integration Tests of the City API Application..."
    - "mvn package $MAVEN_CLI_OPTS"
    - echo "Complete Integration Tests of the City API Application..."
  artifacts:
    paths:
      - target/

copy-to-s3-job:
  stage: copy-to-s3
  dependencies:
    - integrationtest-job
  script:
    - echo "Copying Jar file to S3..."
    - aws s3 cp target/$JAR_NAME s3://$S3_BUCKET/$JAR_NAME
  artifacts:
    paths:
      - target/

deploy-job:
  stage: deploy
  dependencies:
    - copy-to-s3-job
  script:
    - echo "Running deploy of the City API Application..."
    - aws elasticbeanstalk create-application --application-name $APPLICATION_NAME
    - aws elasticbeanstalk create-environment --application-name $APPLICATION_NAME --cname-prefix $APPLICATION_NAME --environment-name $ENVIRONMENT_NAME --solution-stack-name "Docker running on 64bit Amazon Linux 2/3.4.13"
    - aws elasticbeanstalk create-application-version --application-name $APPLICATION_NAME --version-label $VERSION_LABEL --source-bundle S3Bucket=S3_BUCKET,S3Key=$$JAR_NAME
    - aws elasticbeanstalk update-environment --environment-name $ENVIRONMENT_NAME --version-label $VERSION_LABEL
  artifacts:
    paths:
      - target/*.jar
